package com.shouldioptimize.model

object Ec2Pricing {
  val all = Map("t2.nano" -> "0.0065",
                "t2.micro" -> "0.013",
                "t2.small" -> "0.026",
                "t2.medium" -> "0.052",
                "t2.large" -> "0.104",
                "m4.large" -> "0.12",
                "m4.xlarge" -> "0.239",
                "m4.2xlarge" -> "0.479",
                "m4.4xlarge" -> "0.958",
                "m4.10xlarge" -> "2.394",
                "m3.medium" -> "0.067",
                "m3.large" -> "0.133",
                "m3.xlarge" -> "0.266",
                "m3.2xlarge" -> "0.532",
                "c4.large" -> "0.105",
                "c4.xlarge" -> "0.209",
                "c4.2xlarge" -> "0.419",
                "c4.4xlarge" -> "0.838",
                "c4.8xlarge" -> "1.675",
                "c3.large" -> "0.105",
                "c3.xlarge" -> "0.21",
                "c3.2xlarge" -> "0.42",
                "c3.4xlarge" -> "0.84",
                "c3.8xlarge" -> "1.68",
                "g2.2xlarge" -> "0.65",
                "g2.8xlarge" -> "2.6",
                "r3.large" -> "0.166",
                "r3.xlarge" -> "0.333",
                "r3.2xlarge" -> "0.665",
                "r3.4xlarge" -> "1.33",
                "r3.8xlarge" -> "2.66",
                "i2.xlarge" -> "0.853",
                "i2.2xlarge" -> "1.705",
                "i2.4xlarge" -> "3.41",
                "i2.8xlarge" -> "6.82",
                "d2.xlarge" -> "0.69",
                "d2.2xlarge" -> "1.38",
                "d2.4xlarge" -> "2.76",
                "d2.8xlarge" -> "5.52") mapValues BigDecimal.apply
}
